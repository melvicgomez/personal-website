name: CI/CD

on:
  push:
    branches: [master]
  workflow_dispatch:
    workflows: [Manually update the profile's README WakaTime]
    branches: [master]

jobs:
  build: # set depends on what you need
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Create .env file
        env:
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        run: |
          touch .env
          echo "CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_ACCESS_TOKEN" >> .env
          echo "CONTENTFUL_SPACE_ID=$CONTENTFUL_SPACE_ID" >> .env

      - name: Install dependencies and build project
        run: |
          npm i
          npm run build

      - name: Create zip file of public directory
        run: tar -zcvf bundle.tar.gz -C public/ .

      - name: Store bundle in artifact
        uses: actions/upload-artifact@v2
        with:
          name: bundle-tar
          path: bundle.tar.gz
          retention-days: 1

  deploy: # set depends on what you need
    name: Deploy project
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download bundle artifact from previous job
        uses: actions/download-artifact@v2
        with:
          name: bundle-tar

      - name: Upload bundle tar file in Hostinger using FTP
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          server-dir: ${{ secrets.FTP_ARCHIVE_DEST }}

      - name: Extract and copy files in public_html directory using ssh
        uses: appleboy/ssh-action@master
        env:
          RELEASE_DIR: ${{ secrets.RELEASE_DIR }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          envs: RELEASE_DIR
          script: |
            cd $RELEASE_DIR
            rm -rf public_html/&
            mkdir public_html/
            tar -C public_html/ -xzvf bundle.tar.gz
            rm -rf bundle.tar.gz
